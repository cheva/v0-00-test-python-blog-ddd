From 04dfcfbe58aa63a3574c1ce5dc0b9db223afa1fa Mon Sep 17 00:00:00 2001
From: Miguel Grinberg <miguel.grinberg@gmail.com>
Date: Tue, 5 Sep 2017 00:04:56 -0700
Subject: [PATCH] Chapter 3: Web Forms (v0.3)

---
 app/__init__.py          |  2 ++
 app/forms.py             | 10 ++++++++++
 app/routes.py            | 13 ++++++++++++-
 app/templates/base.html  | 15 ++++++++++++++-
 app/templates/login.html | 24 ++++++++++++++++++++++++
 config.py                |  4 ++++
 6 files changed, 66 insertions(+), 2 deletions(-)
 create mode 100644 app/forms.py
 create mode 100644 app/templates/login.html
 create mode 100644 config.py

diff --git a/app/__init__.py b/app/__init__.py
index 96c8ef5dc..f5b34f45b 100644
--- a/app/__init__.py
+++ b/app/__init__.py
@@ -1,5 +1,7 @@
 from flask import Flask
+from config import Config
 
 app = Flask(__name__)
+app.config.from_object(Config)
 
 from app import routes
diff --git a/app/forms.py b/app/forms.py
new file mode 100644
index 000000000..6d1003a67
--- /dev/null
+++ b/app/forms.py
@@ -0,0 +1,10 @@
+from flask_wtf import FlaskForm
+from wtforms import StringField, PasswordField, BooleanField, SubmitField
+from wtforms.validators import DataRequired
+
+
+class LoginForm(FlaskForm):
+    username = StringField('Username', validators=[DataRequired()])
+    password = PasswordField('Password', validators=[DataRequired()])
+    remember_me = BooleanField('Remember Me')
+    submit = SubmitField('Sign In')
diff --git a/app/routes.py b/app/routes.py
index d486cc3de..82bfa5def 100644
--- a/app/routes.py
+++ b/app/routes.py
@@ -1,5 +1,6 @@
-from flask import render_template
+from flask import render_template, flash, redirect, url_for
 from app import app
+from app.forms import LoginForm
 
 
 @app.route('/')
@@ -17,3 +18,13 @@ def index():
         }
     ]
     return render_template('index.html', title='Home', user=user, posts=posts)
+
+
+@app.route('/login', methods=['GET', 'POST'])
+def login():
+    form = LoginForm()
+    if form.validate_on_submit():
+        flash('Login requested for user {}, remember_me={}'.format(
+            form.username.data, form.remember_me.data))
+        return redirect(url_for('index'))
+    return render_template('login.html',  title='Sign In', form=form)
diff --git a/app/templates/base.html b/app/templates/base.html
index 56e87bef5..cb17e618b 100644
--- a/app/templates/base.html
+++ b/app/templates/base.html
@@ -8,8 +8,21 @@
         {% endif %}
     </head>
     <body>
-        <div>Microblog: <a href="/index">Home</a></div>
+        <div>
+            Microblog:
+            <a href="{{ url_for('index') }}">Home</a>
+            <a href="{{ url_for('login') }}">Login</a>
+        </div>
         <hr>
+        {% with messages = get_flashed_messages() %}
+        {% if messages %}
+        <ul>
+            {% for message in messages %}
+            <li>{{ message }}</li>
+            {% endfor %}
+        </ul>
+        {% endif %}
+        {% endwith %}
         {% block content %}{% endblock %}
     </body>
 </html>
diff --git a/app/templates/login.html b/app/templates/login.html
new file mode 100644
index 000000000..806e09a6a
--- /dev/null
+++ b/app/templates/login.html
@@ -0,0 +1,24 @@
+{% extends "base.html" %}
+
+{% block content %}
+    <h1>Sign In</h1>
+    <form action="" method="post" novalidate>
+        {{ form.hidden_tag() }}
+        <p>
+            {{ form.username.label }}<br>
+            {{ form.username(size=32) }}<br>
+            {% for error in form.username.errors %}
+            <span style="color: red;">[{{ error }}]</span>
+            {% endfor %}
+        </p>
+        <p>
+            {{ form.password.label }}<br>
+            {{ form.password(size=32) }}<br>
+            {% for error in form.password.errors %}
+            <span style="color: red;">[{{ error }}]</span>
+            {% endfor %}
+        </p>
+        <p>{{ form.remember_me() }} {{ form.remember_me.label }}</p>
+        <p>{{ form.submit() }}</p>
+    </form>
+{% endblock %}
diff --git a/config.py b/config.py
new file mode 100644
index 000000000..3f9f12138
--- /dev/null
+++ b/config.py
@@ -0,0 +1,4 @@
+import os
+
+class Config:
+    SECRET_KEY = os.environ.get('SECRET_KEY') or 'you-will-never-guess'
