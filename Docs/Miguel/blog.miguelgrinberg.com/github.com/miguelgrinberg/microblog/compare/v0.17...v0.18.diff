diff --git a/Procfile b/Procfile
new file mode 100644
index 00000000..216c6399
--- /dev/null
+++ b/Procfile
@@ -0,0 +1 @@
+web: flask db upgrade; flask translate compile; gunicorn microblog:app
diff --git a/app/__init__.py b/app/__init__.py
index 49fad10b..de8d6a08 100644
--- a/app/__init__.py
+++ b/app/__init__.py
@@ -68,15 +68,20 @@ def create_app(config_class=Config):
             mail_handler.setLevel(logging.ERROR)
             app.logger.addHandler(mail_handler)
 
-        if not os.path.exists('logs'):
-            os.mkdir('logs')
-        file_handler = RotatingFileHandler('logs/microblog.log',
-                                           maxBytes=10240, backupCount=10)
-        file_handler.setFormatter(logging.Formatter(
-            '%(asctime)s %(levelname)s: %(message)s '
-            '[in %(pathname)s:%(lineno)d]'))
-        file_handler.setLevel(logging.INFO)
-        app.logger.addHandler(file_handler)
+        if app.config['LOG_TO_STDOUT']:
+            stream_handler = logging.StreamHandler()
+            stream_handler.setLevel(logging.INFO)
+            app.logger.addHandler(stream_handler)
+        else:
+            if not os.path.exists('logs'):
+                os.mkdir('logs')
+            file_handler = RotatingFileHandler('logs/microblog.log',
+                                               maxBytes=10240, backupCount=10)
+            file_handler.setFormatter(logging.Formatter(
+                '%(asctime)s %(levelname)s: %(message)s '
+                '[in %(pathname)s:%(lineno)d]'))
+            file_handler.setLevel(logging.INFO)
+            app.logger.addHandler(file_handler)
 
         app.logger.setLevel(logging.INFO)
         app.logger.info('Microblog startup')
diff --git a/config.py b/config.py
index 1fd1a8c3..af203e54 100644
--- a/config.py
+++ b/config.py
@@ -7,8 +7,10 @@
 
 class Config:
     SECRET_KEY = os.environ.get('SECRET_KEY') or 'you-will-never-guess'
-    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or \
+    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL', '').replace(
+        'postgres://', 'postgresql://') or \
         'sqlite:///' + os.path.join(basedir, 'app.db')
+    LOG_TO_STDOUT = os.environ.get('LOG_TO_STDOUT')
     MAIL_SERVER = os.environ.get('MAIL_SERVER')
     MAIL_PORT = int(os.environ.get('MAIL_PORT') or 25)
     MAIL_USE_TLS = os.environ.get('MAIL_USE_TLS') is not None
diff --git a/requirements.txt b/requirements.txt
index 748314dd..3ebea535 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -38,3 +38,7 @@ typing_extensions==4.8.0
 urllib3==2.1.0
 Werkzeug==3.0.1
 WTForms==3.1.1
+
+# requirements for Heroku
+psycopg2-binary==2.9.9
+gunicorn==21.2.0
